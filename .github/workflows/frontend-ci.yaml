name: Frontend CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
    # paths:
    #   - 'starter/frontend/**'
  pull_request:
    branches:
      - main
    paths:
      - 'starter/frontend/**'

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18

    - name: Cache Node Modules
      uses: actions/cache@v4
      with:
          path: starter/frontend/node_modules  # Path to dependencies
          key: ${{ runner.os }}-node-${{ hashFiles('starter/frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

    - name: Install dependencies
      run: |
        cd starter/frontend
        npm ci

    - name: Run linting
      run: |
        cd starter/frontend
        npm run lint

  test:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18

    - name: Cache Node Modules
      uses: actions/cache@v4
      with:
          path: starter/frontend/node_modules  # Path to dependencies
          key: ${{ runner.os }}-node-${{ hashFiles('starter/frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

    - name: Install dependencies
      run: |
        cd starter/frontend
        npm ci

    - name: Run tests
      run: |
        cd starter/frontend
        npm run test

  build:
    needs: [lint, test]
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18

    - name: Cache Node Modules
      uses: actions/cache@v4
      with:
          path: starter/frontend/node_modules  # Path to dependencies
          key: ${{ runner.os }}-node-${{ hashFiles('starter/frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

    - name: Install dependencies
      run: |
        cd starter/frontend
        npm ci

    - name: Docker build
      run: |
        cd starter/frontend
        docker build --build-arg=REACT_APP_MOVIE_API_URL=http://localhost:5000 --tag=mp-frontend:latest .
        docker run --name mp-frontend -p 3000:3000 -d mp-frontend